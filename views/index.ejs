<!DOCTYPE html>
<html>

<head>
  <script type="text/javascript" src="/javascripts/main.js"></script>
  <link rel="stylesheet" href="/stylesheets/main.css">
  <link rel="stylesheet" href="/stylesheets/style.css">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;700&display=swap" rel="stylesheet">

</head>

<body>

  <div class="container-fluid" style="height: 100vh; background-color: #DDD8D8;  padding-left: 0;
  padding-right: 0;">
    <%- include('partials/top-banner') %>



      <div class="row h-100 ">
        <div class="col-12" style="padding: 58px 88px; background-color: #727272;">
          <!--Map-->
          <div id='printoutPanel'></div>

          <div id='myMap' style='width: 100%; height: 80vh;'></div>
          <p hidden id="dataobj">
            <%= JSON.stringify(datavals) %>
          </p>
          <script type='text/javascript'>
            var map = null;
            var heatMaps = [];

            // Default values
            var latitude = 39.393486;
            var longitude = -98.100769;
            var zoomlevel = 5;

            // Initializes map
            function loadMapScenario(position) {
              // Attempts to set location based on user data
              try {
                latitude = position.coords.latitude;
                longitude = position.coords.longitude;
                zoomlevel = 7;
              }
              // If it fails, just user default values
              catch (error) { }

              // Initialize the map
              map = new Microsoft.Maps.Map(document.getElementById('myMap'), {
                /* No need to set credentials if already passed in URL */
                center: new Microsoft.Maps.Location(latitude, longitude),
                zoom: zoomlevel
              });

              // Put wildfire data on the map
              updateMapData();
            }

            // Adds fire data to map
            function updateMapData() {
              // Removes old data
              for (var i = 0; i < heatMaps.length; i++) {
                map.layers.remove(heatMaps[i]);
              }

              Microsoft.Maps.loadModule('Microsoft.Maps.HeatMap', function () {
                var mapDiv = map.getRootElement();
                //var locations = [];
                var locations1 = [];
                var locations2 = [];
                var locations3 = [];
                var locations4 = [];

                // Base url for getting wildfire data from Node REST API
                var url = document.getElementById("timeSelector").value;

                var data = null;

                data = JSON.parse(document.getElementById("dataobj").innerText);

                // Adds data points
                for (i = 0; i < data[url].length; i++) {
                  var location = new Microsoft.Maps.Location(data[0][i]['latitude'], data[0][i]['longitude']);

                  if (data[url][i]['risk'] < 0.25) {
                    locations1.push(location);
                  }
                  else if (data[url][i]['risk'] < 0.5) {
                    locations2.push(location);
                  }
                  else if (data[url][i]['risk'] < 0.75) {
                    locations3.push(location);
                  }
                  else {
                    locations4.push(location);
                  }
                }

                var heatMap1 = new Microsoft.Maps.HeatMapLayer(locations1, {
                  intensity: 0.3,
                  radius: 10,
                  colorGradient: {
                    '0': 'Green',
                    '0.4': 'Green',
                    '0.6': 'Green',
                    '0.8': 'Green',
                    '1': 'Green'
                  },
                  aggregateLocationWeights: true
                });

                var heatMap2 = new Microsoft.Maps.HeatMapLayer(locations2, {
                  intensity: 0.3,
                  radius: 10,
                  colorGradient: {
                    '0': 'Yellow',
                    '0.4': 'Yellow',
                    '0.6': 'Yellow',
                    '0.8': 'Yellow',
                    '1': 'Yellow'
                  },
                  aggregateLocationWeights: true
                });

                var heatMap3 = new Microsoft.Maps.HeatMapLayer(locations3, {
                  intensity: 0.3,
                  radius: 10,
                  colorGradient: {
                    '0': 'Orange',
                    '0.4': 'Orange',
                    '0.6': 'Orange',
                    '0.8': 'Orange',
                    '1': 'Orange'
                  },
                  aggregateLocationWeights: true
                });

                var heatMap4 = new Microsoft.Maps.HeatMapLayer(locations4, {
                  intensity: 0.3,
                  radius: 10,
                  colorGradient: {
                    '0': 'Red',
                    '0.4': 'Red',
                    '0.6': 'Red',
                    '0.8': 'Red',
                    '1': 'Red'
                  },
                  aggregateLocationWeights: true
                });

                // Adds heatmap overlay to map
                //heatMaps.push(heatMap);
                heatMaps.push(heatMap1);
                heatMaps.push(heatMap2);
                heatMaps.push(heatMap3);
                heatMaps.push(heatMap4);
                //map.layers.insert(heatMap);
                map.layers.insert(heatMap1);
                map.layers.insert(heatMap2);
                map.layers.insert(heatMap3);
                map.layers.insert(heatMap4);
              });
              undefined;

              // Example High Risk popup window
              if (isHighRisk()) {
                sleep(500).then(() => {
                  centeredPopup('alert.ejs', 'myWindow', '700', '300', 'yes');
                });
              }
            }

            function sleep(ms) {
              return new Promise(resolve => setTimeout(resolve, ms));
            }

            // Checks for high risk at coordinates (not done)
            function isHighRisk() {
              return false;
            }
          </script>
          <script>
            // Gets user location, and then loads the map with the data
            function getPos() {
              if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(loadMapScenario, loadMapScenario);
              }
            }
          </script>

          <!--Loads the map API, and then calls getPos after it finishes-->
          <script type='text/javascript'
            src='https://www.bing.com/api/maps/mapcontrol?key=Aqs6Rr_y1-4u0HJm4NJ0BlaOLrstaN04VGPZ6p6zAebsK76Ek1U1nAPbmcF2sIno&callback=getPos'
            async defer></script>

          <script language="javascript">
            // Code for popup windows
            var popupWindow = null;

            function centeredPopup(url, winName, w, h, scroll) {
              // Sets sizing parameters
              LeftPosition = (screen.width) ? (screen.width - w) / 2 : 0;
              TopPosition = (screen.height) ? (screen.height - h) / 2 : 0;
              settings =
                'height=' + h + ',width=' + w + ',top=' + TopPosition + ',left=' + LeftPosition + ',scrollbars=' + scroll + ',resizable'

              // Creates a window displaying the selected file with selected settings
              popupWindow = window.open(url, winName, settings)
            }
          </script>

          <!--Time Selector-->
          <div class="slidecontainer centered">
            <input type="range" min="0" max="11" value="0" class="slider" id="timeSelector">
          </div>
          <div class="centered">
            <p>Date: <span id="timeOutput"></span></p>
          </div>
          <!-- 
        Example buttons for testing High Risk and Sign Up popups
        <div class="centered">
          <button onclick="centeredPopup('alert.ejs','myWindow','700','300','yes');">High Risk Popup</button>
        </div> -->

          <!-- Row for text blocks with vertical alignment and specific margin adjustment -->
          <div class="row align-items-start text-block-row" style="margin-right: 10px; margin-left: 10px;">
            <!-- Text block on the left -->
            <div class="row align-items-start text-block-row" style="margin-right: 10px; margin-left: 10px;">
              <!-- Text block for 'How to Use the Map' -->
              <div class="col-md-6 text-center">
                <div class="text-block">
                  <h5 style="text-align: left; padding-left: 14px; font-size: 26px;">How to Use the Map</h5>
                  <ol style="text-align: left; font-size: 18px;">
                    <li>Use the search bar to find a particular county, city, or address.</li>
                    <li>Reference the map key to understand the level of wildfire risk.</li>
                    <li>Learn how to prepare for wildfires <a
                        style="font-style: italic; text-decoration: none; color: white;" href="education.ejs">here.</a>
                    </li>
                  </ol>
                </div>
              </div>
              <!-- Map Key Section -->
              <div class="col-md-6 text-center">
                <div class="text-block">
                  <h5>Map Key</h5>
                  <div class="map-key-item">
                    <img src="resources/green.png" alt="Low risk" class="color-box">
                    <img src="resources/line.png" alt="Line" class="line-image">
                    <span class="map-key-text">Low risk</span>
                  </div>
                  <div class="map-key-item">
                    <img src="resources/yellow.png" alt="Medium risk" class="color-box">
                    <img src="resources/line.png" alt="Line" class="line-image">
                    <span class="map-key-text">Medium risk</span>
                  </div>
                  <div class="map-key-item">
                    <img src="resources/red.png" alt="High risk" class="color-box">
                    <img src="resources/line.png" alt="Line" class="line-image">
                    <span class="map-key-text">High risk</span>
                  </div>
                </div>
              </div>

              <!-- Right Column for Search -->
              <div class="col-md-6">
                <div class="search-area">
                  <span class="search-label">Search</span>
                  <div class="search-wrapper">
                    <form onsubmit="geocodeAddress(); return false;">
                      <input type="text" id="search-input">
                    </form>
                  </div>
                </div>
              </div>
            </div>

            
            <div class="row" style="margin-top: 30px;">
              
              <div class="col-3"></div>
              <div class="col-6">
                <h4 style="color: white; margin-bottom: 30px;">Find other examples of maps below:</h4>


                <div class="card my-2">
                  <div class="row no-gutters">
                    <div class="col-4" style="background-color: gray;">
                      <a href="https://wildfirerisk.org/explore/">
                        <img src="/resources/WRTC_pic.png" class="card-img" alt="Article Image">
                      </a>
                    </div>
                    <div class="col-8">
                      <div class="card-body">
                        <a href="https://wildfirerisk.org/explore/">
                          <h5 class="card-title" style="text-decoration: none;">Explore your wildfire risk</h5>
                        </a>
                        <p class="card-text" style="line-height: 1.5;
                            width: 100%;
                            text-align: left;
                            margin: auto;">Type the name of your community, tribal area, county, or state to view interactive charts and maps about wildfire risk and discover resources to reduce risk.</p>
                      </div>
                    </div>
                  </div>
                </div>

                <div class="card my-2">
                  <div class="row no-gutters">
                    <div class="col-4" style="background-color: gray;">
                      <a href="https://fsapps.nwcg.gov/psp/npsg/forecast/home/#/outlooks?state=map">
                        <img src="/resources/forest_service_map.png" class="card-img" alt="Article Image">
                      </a>
                    </div>
                    <div class="col-8">
                      <div class="card-body">
                        <a href="https://fsapps.nwcg.gov/psp/npsg/forecast/home/#/outlooks?state=map">
                          <h5 class="card-title" style="text-decoration: none;">National 7-Day Signicant Fire Potential</h5>
                        </a>
                        <p class="card-text" style="line-height: 1.5;
                            width: 100%;
                            text-align: left;
                            margin: auto;">A map of the United States presented by the Forest Service that maps the significant fire potential within the next 7 days.</p>
                      </div>
                    </div>
                  </div>
                </div>
                
                <div class="card my-2">
                  <div class="row no-gutters">
                    <div class="col-4" style="background-color: gray;">
                      <a href="https://experience.arcgis.com/experience/6cdda73cf6154949a1fae76ccb2900a0/page/Main-Page/?views=About-%26-Links">
                        <img src="/resources/DNR_Dashboard.png" class="card-img" alt="Article Image">
                      </a>
                    </div>
                    <div class="col-8">
                      <div class="card-body">
                        <a href="https://experience.arcgis.com/experience/6cdda73cf6154949a1fae76ccb2900a0/page/Main-Page/?views=About-%26-Links">
                          <h5 class="card-title" style="text-decoration: none;">DNR Wildfire Intel Dashboard</h5>
                        </a>
                        <p class="card-text" style="line-height: 1.5;
                            width: 100%;
                            text-align: left;
                            margin: auto;">The Washington DNR fire dashboard is a situational awareness and decision support tool for state fire managers and the public. We made this application open access to encourage public and other agency benefit and hope you find it useful!</p>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              <div class="col-3"></div>
            </div>

            <!--Code for selector-->
            <script>
              var output = document.getElementById("timeOutput");
              var slider = document.getElementById("timeSelector");

              output.innerHTML = '6-1-2023'; // Display the default slider value

              // Update the current slider value (each time you drag the slider handle)
              slider.oninput = function () {
                // Update map with data from that time period
                updateMapData();

                // Display the selected value
                var files = ['6-1-2023', '7-1-2023', '8-1-2023', '9-1-2023', '10-1-2023', '11-1-2023', '12-1-2023', '1-1-2024', '2-1-2024', '3-1-2024', '4-1-2024', '5-1-2024'];
                output.innerHTML = files[this.value];//this.value;
              }
            </script>
            <script>

              function geocodeAddress() {
                var address = document.getElementById('search-input').value;
                if (!address) {
                  alert('Please enter an address.');
                  return;
                }

                Microsoft.Maps.loadModule('Microsoft.Maps.Search', function () {
                  var searchManager = new Microsoft.Maps.Search.SearchManager(map);
                  var requestOptions = {
                    where: address,
                    callback: function (answer, userData) {
                      if (answer && answer.results && answer.results.length > 0) {
                        var firstResult = answer.results[0]; // Get the first result
                        map.setView({
                          center: firstResult.location,
                          zoom: 13  // Set zoom level to provide a close-up on the location
                        });
                        map.entities.clear(); // Clear existing pushpins
                        map.entities.push(new Microsoft.Maps.Pushpin(firstResult.location, {
                          text: '📍'  // Optionally, add a pin with a label
                        }));
                      } else {
                        alert("Address not found.");
                      }
                    },
                    errorCallback: function (e) {
                      alert("Geocoding failed: " + e.message); // Handle the error
                    }
                  };
                  searchManager.geocode(requestOptions);
                });
              }





            </script>
          </div>
        </div>
        <%- include('partials/subscribe-banner') %>
          <%- include('partials/footer') %>
      </div>




      <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
</body>


</html>